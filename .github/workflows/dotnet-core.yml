name: demoapp

on:
  push:
    branches:
      - develop
      - master

env:
  GITVERSION_VERSION: 5.3.7
  DOTNET_SDK_VERSION: 5.0.100-preview.8
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1 
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  SNAPX_ID: demoapp
  SNAPX_LOG_EXCEPTIONS: 1

jobs:

  setup:    
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      BUILD_VERSION: ${{ steps.set-build-version.outputs.BUILD_VERSION }}
      SNAPX_VERSION: ${{ steps.set-snapx-version.outputs.SNAPX_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
  
      - name: Setup dotnet sdk 3.1          
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: 3.1.x

      - id: set-build-version
        name: Read current application version
        shell: pwsh
        run: |
          dotnet tool update GitVersion.Tool --global --version ${{ env.GITVERSION_VERSION }}
          $BUILD_VERSION = (dotnet gitversion /showVariable NugetVersionv2) | out-string
          echo "::set-output name=BUILD_VERSION::$BUILD_VERSION"

      - id: set-snapx-version
        name: Read current snapx version
        shell: pwsh
        run: |
         [xml] $xml_content = Get-Content ".\$GITHUB_WORKSPACE\Directory.Build.props";
         $SNAPX_VERSION = Select-Xml -Xml $xml_content -XPath "//Project/PropertyGroup/SnapxVersion" | Select -Expand Node | Select -Expand "#text"
         echo "::set-output name=SNAPX_VERSION::$SNAPX_VERSION"

  build:
    name: Build ${{ matrix.os }}-${{ matrix.rid }}
    runs-on: ${{ matrix.os }}
    needs: [setup]
    strategy:
      matrix: 
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: windows-latest
            rid: win-x86
          - os: windows-latest
            rid: win-x64
    env:
      BUILD_VERSION: ${{ needs.setup.outputs.BUILD_VERSION }}
      SNAPX_VERSION: ${{ needs.setup.outputs.SNAPX_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
          lfs: true

      - name: Setup dotnet ${{ env.DOTNET_SDK_VERSION }}
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Build 
        shell: pwsh
        run: .\build.ps1 -Version ${{ env.BUILD_VERSION }} -Rid ${{ matrix.rid }}
          
      - name: Upload artifacts 
        if: success() 
        uses: actions/upload-artifact@v2.0.1
        with:
          name: ${{ matrix.rid }}-artifacts
          path: ${{ github.workspace }}/.snapx/artifacts/${{ env.SNAPX_ID }}/${{ matrix.rid }}/${{ env.BUILD_VERSION }}
          
  publish:
    if: success()
    name: Publish ${{ matrix.rid }}
    runs-on: ubuntu-latest
    needs: [setup, build]
    strategy:
      matrix: 
        rid: [win-x86, win-x64, linux-x64]
    env:
      BUILD_VERSION: ${{ needs.setup.outputs.BUILD_VERSION }}
      SNAPX_VERSION: ${{ needs.setup.outputs.SNAPX_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Setup dotnet ${{ env.DOTNET_SDK_VERSION }}
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
          
      - name: Setup snapx update and push feed
        run: |
          dotnet nuget add source ${{ secrets.SNAPX_PUBLISH_FEED_URL }} --name ${{ env.SNAPX_ID }}-publish
        
      - name: Setup dotnet snapx
        run: dotnet tool update snapx --global --version ${{ env.SNAPX_VERSION }}
        
      - name: Download ${{ matrix.rid }}-artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.rid }}-artifacts
          path: ${{ github.workspace }}/.snapx/artifacts/${{ env.SNAPX_ID }}/${{ matrix.rid }}/${{ env.BUILD_VERSION }}
      
      - name: Publish ${{ matrix.rid }} to test channel
        timeout-minutes: 30
        run: snapx pack ${{ env.SNAPX_ID }} -r ${{ matrix.rid }} -v ${{ env.BUILD_VERSION }} --lock-token ${{ secrets.SNAPX_TOKEN }} --lock-retries -1 -y
        
      - name: Upload installers      
        if: success() 
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.rid }}-installers
          path: ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}/**/*
          
  release:
     if: success() && github.ref == 'refs/heads/master'
     name: Create release and upload assets
     runs-on: ubuntu-latest
     needs: [setup, publish]  
     env:
      BUILD_VERSION: ${{ needs.setup.outputs.BUILD_VERSION }}
      SNAPX_VERSION: ${{ needs.setup.outputs.SNAPX_VERSION }}
     steps:

        - name: Download win-x86-installers installer
          if: success() 
          uses: actions/download-artifact@v2
          with:
            name: win-x86-installers
            path: ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}

        - name: Download win-x64-installers installer
          if: success() 
          uses: actions/download-artifact@v2
          with:
            name: win-x64-installers
            path: ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}

        - name: Download linux-x64-installers installer
          if: success() 
          uses: actions/download-artifact@v2
          with:
            name: linux-x64-installers
            path: ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}
        
        - name: Create github release tag
          uses: softprops/action-gh-release@v1
          with:
            name: Release v${{ env.BUILD_VERSION }}
            tag_name: v${{ env.BUILD_VERSION }}
            draft: true
            prerelease: false
            files: |
              ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}/win-x86/Setup-win-x86-${{ env.SNAPX_ID }}-test-offline.exe
              ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}/win-x86/Setup-win-x86-${{ env.SNAPX_ID }}-test-web.exe
              
              ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}/win-x64/Setup-win-x64-${{ env.SNAPX_ID }}-test-offline.exe
              ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}/win-x64/Setup-win-x64-${{ env.SNAPX_ID }}-test-web.exe
              
              ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}/linux-x64/Setup-linux-x64-${{ env.SNAPX_ID }}-test-offline.bin
              ${{ github.workspace }}/.snapx/installers/${{ env.SNAPX_ID }}/linux-x64/Setup-linux-x64-${{ env.SNAPX_ID }}-test-web.bin
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          
